# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout Repo
    - uses: actions/checkout@v4

      #Setup Jdk
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

      #Build the Spring boot Jar
    - name: Build Spring Boot app
      run: mvn clean package -D skipTests

    # login the Docker
    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build the Docker Image
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/register-form .

    # Push the Docker Image
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/register-form

    # Deploy the Render
    - name: Deploy to  Render
      run: |
        curl -X POST "http://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploy" \
        -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
        -H "content-Type: application/json"